object-ownership là dùng cơ chế theo dõi và đếm các tham chiếu tới đối tượng đang được theo dõi. Ứng với mỗi tham chiếu đến đối tượng sẽ tăng thêm một biến đếm(reference-counting system)
ngược lại nếu số tham chiếu giảm xuống thì số reference count cũng sẽ giảm tương ứng cho tới khi bằng 0. Đối tượng nào có số reference count bằng 0 thì sẽ được hệ thống tự động hũy.

Ban đầu để quản lý việc đếm reference count của mỗi đối tượng một cách thủ công bằng một số methods của lớp NSObject protocol và được gọi là Manual Retain Release (MRR)
Cho tới khi phát hành phiên bản Xcode 4.2 cùng với cơ chế tự động quản lý bộ nhớ được gọi là Automatic Reference Counting (ARC), nó sẽ tự động đếm, tự insert các methods giúp quản lý memory.

Chúng ta sẽ bắt đầu tìm hiểu 2 cơ chế thủ công và tự động bên trên.

Manual Retain Release
Khi có một yêu cầu tạo hoặc giải phóng một đối tượng nào đó trong chương trình. Khi đó bạn cần phải gọi một số methods dưới đây để quản lý bộ nhớ thủ công:
      alloc - Tạo một đối tượng và tạo vùng địa chỉ cho object đó.
      retain - Giữ lại đối tượng không cho nó giải phóng or đang được một đối tượng nào đó sử dụng.
      copy - sao chép đối tượng và tạo một retain.
      release - Giải phóng các mỗi quan hệ giữa các đối tượng và hủy đối tượng đó.
      autorelease - Giải phóng các mỗi quan hệ giữa các đối tượng nhưng hoãn lại chưa hủy đối tượng này(khi hết thúc program mới hủy).
Trong trường hợp chúng ta quên gọi các hàm hủy mà chỉ cấp phát và tạo bộ nhớ không thì sẽ dẫn đến tràn bộ nhớ hay gọi là  memory leak. Hoăc nếu bạn
lúc nào cũng release đối tượng sẽ xãy ra trường hợp treo các vùng nhớ và sẽ không truy cập lại các vùng đó được, được gọi là dangling pointer
Tất cả điều dẫn tới crash progaram.

Enabling MRR
Để trãi Nghiệm quản lý bộ nhớ bằng tay, ta cần phải tắt Automatic Reference Counting, tại Build Settings tab.

The alloc Method
Khi sử dụng alloc như ví dụ bên dưới, nó không chỉ cấp phát bộ nhớ cho đối tượng mà còn setting thêm 1 reference count cho object đó.

      // main.m
#import <Foundation/Foundation.h>

int main(int argc, const char * argv[]) {
    @autoreleasepool {
        NSMutableArray *inventory = [[NSMutableArray alloc] init];
        [inventory addObject:@"Honda Civic"];
        NSLog(@"%@", inventory);
    }
    return 0;
}

Với dòng code trên sẽ được cảnh báo làm cho ứng dụng leak memory.

The release Method
Nó sẽ giải phóng các mối quan hệ với các đối tượng khác or có thể sẽ hủy đối tượng này và làm giảm đi 1 refrence count. Tránh trường hợp leak memory.
Nhưng việc dùng release methods quá sớm sẽ dẫn tới dangling pointer, làm tạo ra nhiều vùng nhớ không được accsess. Vậy nên không được relaese một đối tượng quá sớm khi chưa sử dụng nó xong.

The retain Method
Nó giữ lại đối tượng không cho nó giải phóng, ý muốn nói với hệ thống là tôi cần thèn này và tối không muốn nó bị hủy.

The autorelease method
